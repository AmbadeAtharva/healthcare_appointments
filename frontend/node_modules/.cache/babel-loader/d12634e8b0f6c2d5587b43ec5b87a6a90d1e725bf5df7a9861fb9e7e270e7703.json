{"ast":null,"code":"var _jsxFileName = \"/Users/atharvaambade/WebApps/healthcare_appointment/frontend/src/components/ScheduleAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleAppointment = ({\n  onAppointmentScheduled\n}) => {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [date, setDate] = useState('');\n  const [location, setLocation] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!patientId.trim() || !doctorId.trim() || !date || !location.trim()) {\n      alert('Please fill out all fields before scheduling.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/api/appointments/schedule', {\n        patientId,\n        doctorId,\n        date,\n        location\n      });\n      if (response.data.message) {\n        alert(response.data.message); // Success or warning message\n      }\n      setPatientId('');\n      setDoctorId('');\n      setDate('');\n      setLocation('');\n      onAppointmentScheduled();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to schedule appointment.';\n      alert(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Patient ID\",\n      value: patientId,\n      onChange: e => setPatientId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Doctor ID\",\n      value: doctorId,\n      onChange: e => setDoctorId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: location,\n      onChange: e => setLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleAppointment, \"GdI6zT29NnnlDNc3hrYadz/xwVU=\");\n_c = ScheduleAppointment;\nexport default ScheduleAppointment;\nvar _c;\n$RefreshReg$(_c, \"ScheduleAppointment\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ScheduleAppointment","onAppointmentScheduled","_s","patientId","setPatientId","doctorId","setDoctorId","date","setDate","location","setLocation","handleSubmit","e","preventDefault","trim","alert","response","post","data","message","err","_err$response","_err$response$data","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/atharvaambade/WebApps/healthcare_appointment/frontend/src/components/ScheduleAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ScheduleAppointment = ({ onAppointmentScheduled }) => {\n  const [patientId, setPatientId] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [date, setDate] = useState('');\n  const [location, setLocation] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!patientId.trim() || !doctorId.trim() || !date || !location.trim()) {\n      alert('Please fill out all fields before scheduling.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/appointments/schedule', {\n        patientId,\n        doctorId,\n        date,\n        location,\n      });\n\n      if (response.data.message) {\n        alert(response.data.message); // Success or warning message\n      }\n\n      setPatientId('');\n      setDoctorId('');\n      setDate('');\n      setLocation('');\n      onAppointmentScheduled();\n    } catch (err) {\n      const message = err.response?.data?.message || 'Failed to schedule appointment.';\n      alert(message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"Patient ID\" value={patientId} onChange={(e) => setPatientId(e.target.value)} />\n      <input type=\"text\" placeholder=\"Doctor ID\" value={doctorId} onChange={(e) => setDoctorId(e.target.value)} />\n      <input type=\"datetime-local\" value={date} onChange={(e) => setDate(e.target.value)} />\n      <input type=\"text\" placeholder=\"Location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n      <button type=\"submit\">Schedule</button>\n    </form>\n  );\n};\n\nexport default ScheduleAppointment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}