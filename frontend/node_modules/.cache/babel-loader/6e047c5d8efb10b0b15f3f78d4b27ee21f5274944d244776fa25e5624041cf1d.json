{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScheduleAppointment=_ref=>{let{onAppointmentScheduled}=_ref;const[patientId,setPatientId]=useState('');const[doctorId,setDoctorId]=useState('');const[date,setDate]=useState('');const[location,setLocation]=useState('');const handleSubmit=async e=>{e.preventDefault();if(!patientId.trim()||!doctorId.trim()||!date||!location.trim()){alert('Please fill out all fields before scheduling.');return;}try{const response=await axios.post('http://localhost:5001/api/appointments/schedule',{patientId,doctorId,date,location});if(response.data.message){alert(response.data.message);// Success or warning message\n}setPatientId('');setDoctorId('');setDate('');setLocation('');onAppointmentScheduled();}catch(err){var _err$response,_err$response$data;const message=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Failed to schedule appointment.';alert(message);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Patient ID\",value:patientId,onChange:e=>setPatientId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Doctor ID\",value:doctorId,onChange:e=>setDoctorId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:date,onChange:e=>setDate(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Location\",value:location,onChange:e=>setLocation(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Schedule\"})]});};export default ScheduleAppointment;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ScheduleAppointment","_ref","onAppointmentScheduled","patientId","setPatientId","doctorId","setDoctorId","date","setDate","location","setLocation","handleSubmit","e","preventDefault","trim","alert","response","post","data","message","err","_err$response","_err$response$data","onSubmit","children","type","placeholder","value","onChange","target"],"sources":["/Users/atharvaambade/WebApps/healthcare_appointment/frontend/src/components/ScheduleAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ScheduleAppointment = ({ onAppointmentScheduled }) => {\n  const [patientId, setPatientId] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [date, setDate] = useState('');\n  const [location, setLocation] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!patientId.trim() || !doctorId.trim() || !date || !location.trim()) {\n      alert('Please fill out all fields before scheduling.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/appointments/schedule', {\n        patientId,\n        doctorId,\n        date,\n        location,\n      });\n\n      if (response.data.message) {\n        alert(response.data.message); // Success or warning message\n      }\n\n      setPatientId('');\n      setDoctorId('');\n      setDate('');\n      setLocation('');\n      onAppointmentScheduled();\n    } catch (err) {\n      const message = err.response?.data?.message || 'Failed to schedule appointment.';\n      alert(message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"Patient ID\" value={patientId} onChange={(e) => setPatientId(e.target.value)} />\n      <input type=\"text\" placeholder=\"Doctor ID\" value={doctorId} onChange={(e) => setDoctorId(e.target.value)} />\n      <input type=\"datetime-local\" value={date} onChange={(e) => setDate(e.target.value)} />\n      <input type=\"text\" placeholder=\"Location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n      <button type=\"submit\">Schedule</button>\n    </form>\n  );\n};\n\nexport default ScheduleAppointment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}